plugins {
	id 'org.springframework.boot' version '2.6.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "com.github.node-gradle.node" version "3.0.1"
}

task generateSSLKey {
	def javaHome = System.getProperty("java.home")
	def osName = System.getProperty("os.name")

	if (!file('build/.keyStore/key.cert').exists()) {
		logger.lifecycle("Generating certificate")

		mkdir("build/.keyStore")

		if (osName.toLowerCase().contains('windows')) {
			exec {
				commandLine 'cmd', '/c', 'create_cert.bat', javaHome + '/bin/keytool.exe'
			}
		} else {
			exec {
				commandLine 'create_cert.sh', javaHome + '/bin/keytool'
			}
		}
	}
	else {
		logger.lifecycle("Certificate exist, nothing to do")
	}
}


node {
	version = '16.14.2'
	download = true
	workDir = file("${project.projectDir}/.gradle/nodejs")

	nodeProjectDir = file("${project.projectDir}/src/main/resources/static/client")
}

npm_run {
	args = ['build']
}

processResources.dependsOn npm_run
processResources.dependsOn generateSSLKey

processResources {
	exclude '**/node_modules'
	exclude '/static/client/public/**'
	exclude '/static/client/src/**'
	exclude '/static/client/package*.json'
	exclude '/static/client/README*'
}


group = 'openu'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()

}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'

}

test {
	useJUnitPlatform()
	testLogging.showStandardStreams = true
	testLogging {
		events "passed", "skipped","failed"
	}
}
